generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  User              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_fkey")
}

model CustomTransactionCatogery {
  userId     String
  id         String  @id
  name       String
  isExpenses Boolean @default(false)
  icon       String
  User       User    @relation(fields: [userId], references: [id])

  @@index([userId], map: "CustomTransactionCatogery_userId_fkey")
}

model Session {
  id           String   @id
  sessionToken String   @unique
  userId       String
  expires      DateTime
  User         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "Session_userId_fkey")
}

model Transaction {
  id         String   @id
  walletId   String
  title      String
  isExpenses Boolean
  catogery   String
  note       String?
  amount     Float    @default(0)
  currency   String
  createdAt  DateTime @default(now())
  lastUpdate DateTime
  Wallet     Wallet   @relation(fields: [walletId], references: [id])

  @@index([walletId], map: "Transaction_walletId_fkey")
}

model TransactionCatogery {
  id         String  @id
  name       String
  isExpenses Boolean @default(false)
  icon       String
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Wallet {
  id          String        @id
  userId      String
  title       String        @unique
  amount      Float         @default(0)
  currency    String
  createdAt   DateTime      @default(now())
  lastUpdate  DateTime
  User        User          @relation(fields: [userId], references: [id])
  Transaction Transaction[]
  budget      budget[]

  @@index([userId], map: "Wallet_userId_fkey")
}

model budget {
  id          String   @id
  walletId    String
  name        String
  amount      Float    @default(0)
  currency    String
  catogery    String
  recurrence  String
  startedDate DateTime
  createdAt   DateTime @default(now())
  lastUpdate  DateTime
  Wallet      Wallet   @relation(fields: [walletId], references: [id])

  @@index([walletId], map: "budget_walletId_fkey")
}

model User {
  id                        String                      @id @default(cuid())
  firstName                 String?
  secondName                String?
  email                     String?                     @unique
  password                  String?
  emailVerified             DateTime?
  image                     String?
  gender                    String?
  age                       Int                         @default(0)
  Account                   Account[]
  CustomTransactionCatogery CustomTransactionCatogery[]
  Session                   Session[]
  Wallet                    Wallet[]
}
